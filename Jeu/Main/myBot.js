const Discord = require('discord.js');
const fs = require('fs');
const myBot = require('./myBot.js');

const opi = require('../Personnages/opinion.json');


const initJeu = require('./initJeu.js');
const finJeu = require('./finJeu.js');
const sfm = require('./saveFileManagement.js');
const his = require('../Historique/historique.js')
const gt = require('../Event/gestionTour.js')

const client = new Discord.Client();
const config = require('../token.json');

// Dossier des personnages
const perso = require('../Personnages/perso.json');
// Dossier des actions
const tableaux = require('../Actions/tableaux.json');

// Fonction qui s'active quand le bot est lanc√©
client.on('ready', () => {
  console.log(`Bot has started, with ${client.users.size} users, in ${client.channels.size} channels of ${client.guilds.size} guilds.`);
  client.user.setActivity('gouverner la France');
});

// Fonction qui s'active quand le bot est crash
client.on('error', error => {
  const errorTime = new Date().toUTCString();
  const errorLog = errorTime + ' : The server lost connexion\n \n';
  console.log(errorLog);
  throw error;
});

// Fonction qui s'active lorsqu'un message est √©crit
client.on('message', (message) => {

  // Si le message provient d'un bot ou qu'il ne contient pas le prefix appropri√©, on ne fait rien
	if (!message.content.startsWith(config.prefix) || message.author.bot) return;

  else {
    // args est un tableau comprenant tous les arguments √©crit apr√®s la commande
    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);

    // command est la commande √©crite par le joueur
    const command = args.shift().toLowerCase();

    let partie;
    // on charge les informations du joueur

    try{
      partie = sfm.loadSave(message.author.id);
    }
    catch(e) {
      initJeu.initStat(message.author);
      partie = sfm.loadSave(message.author.id);
    }


    switch(command) {
      case 'perso':
        for (var i=0; i < 5; i++){
          writePerso(message, i);
        }
        break;
      case 'fct':
        writeConseil(message, partie);
        break;
      // Start : commencer une partie
      case 'start':
        //sfm.save(message.author.id, partie);
        initJeu.initJeu(message, client);
        break;
      case 'test':
        his.historique(message, partie);
        break;
      // Help : afficher toutes les commandes importantes
      case 'help':
        const embed = new Discord.RichEmbed()
        .setColor(15013890)
        .setTitle('**Help**')
        .addField(config.prefix + 'start', 'Commencer une partie')
        .addField(config.prefix + 'tuto', 'Commencer un tutoriel')
        .addField(config.prefix + 'end', 'Terminer une partie *(Seulement en partie)*')
        message.channel.send({ embed });
        break;
      // Tuto : commencer un tutoriel
      case 'tuto':
        sfm.save(message.author.id, partie);
        initJeu.initJeu(message, client);
        break;
      // End : terminer la partie
      case 'end':
        finJeu.msgFin(message, partie);
        break;
      // Quit : quitter la partie
      case 'quit':
        finJeu.finJeu(message);
        break;
      // Text : afficher le texte de pr√©sentation du projet
      case 'text':
        text(message);
        break;
      case 'clear':
        myBot.clear(message);
        break;
      // Autre : commande inconnue
      default:
        message.channel.send('Commande inconnue');
        break;
		}
  }
});

// Fonction qui s'active lorsque le joueur r√©agit √† un message
client.on('messageReactionAdd', (reaction, user) => {

  // Si le message provient d'un bot, on ne fait rien
  if(user.bot) return;

  // On charge les informations du joueur
  const partie = sfm.loadSave(user.id);
  let tabNR = []; // tableau des noms des repas
  let tabNA = []; // tableau des noms d'activit√©s
  let tabER = []; // tableau des emotes des repas
  let tabEA = []; // tableau des emotes d'activit√©s
  let tabIA = []; // tableau de l'impact des activit√©s
  let tabIR = []; // tableau de l'impact  des repas

  // On attribut √† chaque tableau les informations appropri√©es en fonction de la partie du jour
  tabNR = tableaux.nomRepasM;
  tabNA = tableaux.nomActiviteM;
  tabIA = tableaux.impactAM;
  tabIR = tableaux.impactRM;


  // Action effectu√©e en fonction de la r√©action
  switch(reaction.emoji.name) {
    // Choix d'un personnage pr√©d√©fini
    case '‚úÖ':
      initJeu.accueil(reaction.message, partie);
      break;
    // Passer √† l'√©venement suivant
    case '‚û°':
      gt.gTours(reaction.message, partie);
      break;
    case 'üë¥':
      myBot.clear(reaction.message);
      numPerso = 0;
      initJeu.initPerso(reaction.message, numPerso, partie);
      break;
    case 'üë±':
      myBot.clear(reaction.message);
      numPerso = 2;
      initJeu.initPerso(reaction.message, numPerso, partie);
      break;
    case 'üë≤':
      myBot.clear(reaction.message);
      numPerso = 3;
      initJeu.initPerso(reaction.message, numPerso, partie);
      break;
    case 'üëµ':
      myBot.clear(reaction.message);
      numPerso = 4;
      initJeu.initPerso(reaction.message, numPerso, partie);
      break;
    case 'üë∏':
      myBot.clear(reaction.message);
      numPerso = 5;
      initJeu.initPerso(reaction.message, numPerso, partie);
      break;
    case 'üë∂':

      marierEnfant(reaction.message, numPerso, partie)
      sfm.save(partie.player, partie);
      break;
    case 'üéä':
      if (partie.feteOrganise){
        fete(reaction.message, partie);
        partie.feteOrganise = false;
        sfm.save(partie.player, partie);
      };
      break;
    case 'üèπ':
      if (partie.guerreDeclare){
        guerre(reaction.message, partie);
        partie.guerreDeclare = false;
        sfm.save(partie.player, partie);
      };
      break;
    case'üó°':
    /*  if (partie.epoux != null) {
        tuerfemme(reaction.message,partie);
          sfm.save(partie.player, partie);
      }
      */
  }
});

// Fonction qui s'active lorsqu'un joueur entre dans le serveur
client.on('guildMemberAdd', (member) => {
    initJeu.initstat(member.user);
});

/** Fonction qui renvoie l'id du channel qui a pour nom chanName
* @param {string} message - Message discord
* @param {string} chanName - Nom du channel dans lequel le message sera envoy√©
* @param {Object} partie - Objet json de la partie
* @return {number} Identifiant du channel
**/
exports.messageChannel = function messageChannel(message, chanName, partie) {

  // Liste des channels de la partie du joueur
  const listChan2 = finJeu.listChan(message, partie);

  let id = 1;
  listChan2.forEach(channel => {
      if(channel.name === chanName)
      {
          id = channel.id;
      }
  });
  return id;
};

exports.writePerso = function writePerso(message, numPerso) {
        var enf ="";
        var size = perso.enfants[numPerso].length;
        if (size == 0) {
          enf = "Aucun enfant";
        } else {
          for (var size in perso.enfants[numPerso]){
              enf = enf + "  \n | " +perso.id[perso.enfants[numPerso][size] - 1]  + " "  + perso.nom[perso.enfants[numPerso][size] - 1];
          }
        }

        message.channel.send({ embed: {
          color: 0x00AE86,
          author:
          {
            name: 'Pr√©sentation',
          },
          fields: [{
              name: 'Nom',
              value: perso.nom[numPerso],
          },
          {
              name: 'Sexe',
              value: perso.sexe[numPerso],
          },
          {
              name: 'Age',
              value: perso.age[numPerso],
          },
          {
            name: 'Enfants',
            value: enf,
          },
          {
            name: 'Icone',
            value : perso.icone[numPerso],
          }
        ],
        } });

}

// Conseil
exports.writeConseil = function writeConseil(message, partie){

  var id = myBot.messageChannel(message, "conseil", partie);

  message.delete();

  myBot.clear(message)

  var laws = "" ;

  for(var i = 0 ; i<opi.loies.length ; i++){
    laws += "**" + opi.loies[i] + "** : " + opi.loiesDesc[i] + "\n" ;
  }

  message.guild.channels.get(id).send({embed: {
      color : 0X4141FF,
      author:
      {
        name: 'Loies',
      },
      fields: [
        {
          name : 'Loies Votables (' + opi.loies.length + ")",
          value : laws,
        },
        {
          name : 'Loies Adop√©es',
          value : 'Liste des loies votables',
        },
      ],
    }
  }) ;

  var opiArmee = "" ;
  var opiClerg = "" ;
  var opiAristo = "" ;


  for(var i = 0 ; i<opi.loies.length ; i++){
    if(opi.aviArmee[i]<0.33)
      opiArmee  += "" + opi.loies[i] + " :\n:small_orange_diamond:  nous sommes favorable √† " + Math.trunc(opi.aviArmee[i] *100) + "%\n" ;
    else if(opi.aviArmee[i]<0.66)
      opiArmee  += "" + opi.loies[i] + " :\n:white_small_square:  nous sommes favorable √† "   + Math.trunc(opi.aviArmee[i] *100) + "%\n" ;
    else
      opiArmee  += "" + opi.loies[i] + " :\n:small_blue_diamond:  nous sommes favorable √† "   + Math.trunc(opi.aviArmee[i] *100) + "%\n" ;

    if(opi.aviClerge[i]<0.33)
      opiClerg  += "" + opi.loies[i] + " :\n:small_orange_diamond:  nous sommes favorable √† " + Math.trunc(opi.aviClerge[i] *100) + "%\n" ;
    else if(opi.aviClerge[i]<0.66)
      opiClerg  += "" + opi.loies[i] + " :\n:white_small_square:  nous sommes favorable √† "   + Math.trunc(opi.aviClerge[i] *100) + "%\n" ;
    else
      opiClerg  += "" + opi.loies[i] + " :\n:small_blue_diamond:  nous sommes favorable √† "   + Math.trunc(opi.aviClerge[i] *100) + "%\n" ;

    if(opi.aviAristo[i]<0.33)
      opiAristo  += "" + opi.loies[i] + " :\n:small_orange_diamond:  nous sommes favorable √† " + Math.trunc(opi.aviAristo[i] *100) + "%\n" ;
    else if(opi.aviAristo[i]<0.66)
      opiAristo  += "" + opi.loies[i] + " :\n:white_small_square:  nous sommes favorable √† "   + Math.trunc(opi.aviAristo[i] *100) + "%\n" ;
    else
      opiAristo  += "" + opi.loies[i] + " :\n:small_blue_diamond:  nous sommes favorable √† "   + Math.trunc(opi.aviAristo[i] *100) + "%\n" ;
  }

  message.guild.channels.get(id).send({embed: {
      color : 0X4141FF,
      author:
      {
        name: 'Membres du conseil',
      },
      fields: [
        {
          name : "Arm√©es (" + partie.aviArmee*100 + '%)',
          value : opiArmee,
        },
        {
          name : "Clerg√© (" + partie.aviClerge*100 + '%)',
          value : opiClerg,
        },
        {
          name : "Arosticrates (" + partie.aviAristo*100 +'%)',
          value : opiAristo,
        },
      ],
    }
  }) ;
  /*  EXEMPLE DE VOTE
  console.log(opi.loies[0] + " : " +vote(opi.loies[0]));
  console.log(opi.loies[1] + " : " +vote(opi.loies[1]));
  console.log(opi.loies[2] + " : " +vote(opi.loies[2]));
  //*/
}

exports.vote = function vote(law, partie){
  var aviFinal = 0 ;

  for(var i in opi.loies.length){
    if(opi.loies[i] == "law")
      aviFinal = (opi.aviArmee[i] * partie.aviArmee + opi.aviClerge[i] * partie.aviClerge + opi.aviAristo[i] * partie.aviAristo) / (partie.aviAristo + partie.aviClerge + partie.aviArmee) ;
  }

  return aviFinal >= 0.5 ;
}


// Statistiques
function writeStat(message, partie){

  //R√©cup√©rer les enfants
  var enf =""

  for (var i in perso.enfants[numPerso]){
    enf = enf + "  \n | " +perso.id[perso.enfants[numPerso][i] - 1]  + " "  + perso.nom[perso.enfants[numPerso][i] - 1];
    // perso.nom[perso.enfants[i]] = Le nom de l'enfant dont l'ID est mentionn√© au rang i
  }

  var id = myBot.messageChannel(message, "statistiques", partie);

  message.guild.channels.get(id).send({embed: {
      color : 0Xa1f442,
      author:
      {
        name: 'Statistiques',
      },
      fields: [
      {
        name : "Ann√©e actuelle",
        value : "1300 (en dur, √† mettre dans une variable globale)",
      },
      {
        name : 'Nom',
        value : perso.nom[0],
      },
      {
        name : 'Age',
        value : perso.age[0],
      },
      {
        name : 'Epoux/se',
        value : perso.epoux[0],
      },
      {
        name : "Enfant(s)",
        value : enf,
      },
    ],
  } });
}


// Statistiques
function writeStat(message, partie){

  const id = myBot.messageChannel(message, "famille", partie);
  //R√©cup√©rer les enfants
  var enf =""

  for (var i in perso.enfants[numPerso]){
    enf = enf + "  \n | " +perso.id[perso.enfants[numPerso][i] - 1]  + " "  + perso.nom[perso.enfants[numPerso][i] - 1];
    // perso.nom[perso.enfants[i]] = Le nom de l'enfant dont l'ID est mentionn√© au rang i
  }

var id = myBot.messageChannel(message, "statistiques", partie);

message.guild.channels.get(id).send({embed: {
    color : 0Xa1f442,
    author:
    {
      name: 'Statistiques',
    },
    fields: [
    {
      name : "Ann√©e actuelle",
      value : "1300 (en dur, √† mettre dans une variable globale)",
    },
    {
      name : 'Nom',
      value : perso.nom[0],
    },
    {
      name : 'Age',
      value : perso.age[0],
    },
    {
      name : 'Epoux/se',
      value : perso.epoux[0],
    },
    {
      name : "Enfant(s)",
      value : enf,
    },
  ],
} });
  const embed = new Discord.RichEmbed()
	.setTitle('G√©rez votre famille')
	.setColor(808367)// Symbole m√©decine
	.setTimestamp() // Cr√©e de l'espace
  .addField( )
	.addField(':older_man:  ', ' afficher ici le nom et pr√©nom ! \n afficher ici   l\'age ! ')
  .addField(' :baby: ', enf)
  .addField(':ring:  ', 'afficher ici le nom du conjoint ')
  .setTimestamp()
  .addField('Tuer : ', ':dagger:')
  .addField('Marier : ', ':ring:')
  .addField('Marier un enfant : ', ':ring: :baby:')

  message.guild.channels.get(id).send({embed})
  .then(async function(mess) {
		await mess.react('üó°');
    await mess.react('üíç');
    await mess.react('üë∂');
	});
}

exports.writeFamille = function(message, partie) {
  const id = myBot.messageChannel(message, "famille", partie);
  //R√©cup√©rer les enfants
  var enf =" "

  for (var i in partie.enfants){
    enf = enf + " | " +partie.enfants[i][1]  + " "  ;
    // perso.nom[perso.enfants[i]] = Le nom de l'enfant dont l'ID est mentionn√© au rang i
  }

  var conjoint = partie.epoux;
  var nom = partie.nom;
  const embed = new Discord.RichEmbed()
	.setTitle('G√©rez votre famille')
	.setColor(808367)// Symbole m√©decine
	.setTimestamp() // Cr√©e de l'espace
  .addField( )
	.addField(':older_man:  ', nom)
  .addField(' :baby: ', enf)
  .addField(':ring:  ', conjoint)
  .setTimestamp()
  .addField('Tuer : ', ':dagger:')
  .addField('Marier : ', ':ring:')
  .addField('Marier un enfant : ', ':ring: :baby:')

  message.guild.channels.get(id).send({embed})
  .then(async function(mess) {
		await mess.react('üó°');
    await mess.react('üíç');
    await mess.react('üë∂');
	});
}

function marierEnfant(message,numPerso,partie) {
  const id = myBot.messageChannel(message, "famille", partie);
  var enf =""
  var pret = ""
  var nb = 0;

  for (var i in partie.enfants){
    var num =i + 1;
    enf = enf + " | " +num + " ->  " +partie.enfants[i][1]  + " \n "  ;
    // perso.nom[perso.enfsants[i]] = Le nom de l'enfant dont l'ID est mentionn√© au rang i
  }
  var myArray = ['Marie-Eve', 'Juliette', 'Th√©ophanie'];
  for (var i in myArray){
    var num =i + 1;
    pret = pret + " | " + num + " ->  " +myArray[i]  + " \n "  ;
    // perso.nom[perso.enfants[i]] = Le nom de l'enfant dont l'ID est mentionn√© au rang i
  }

  console.log(pret);
  const embed = new Discord.RichEmbed()
  .setTitle('Marier un enfant')
  .setColor(808367)// Symbole m√©decine
  .setTimestamp() // Cr√©e de l'espace
  .addField(' Liste des enfants  : ', enf)
  .addField(' Liste des pr√©tendant/es ', pret)
  .addField(' S√©l√©ctionnez l\'enfant √† marier et sa pr√©tendante en √©crivant le num√©ro de l\'enfant puis du pr√©tendant', ' -')
  .addField('exemple : commande 1 1', ' - ')
  message.guild.channels.get(id).send({embed})
  client.on('message', (message) => {

    // Si le message provient d'un bot ou qu'il ne contient pas le prefix appropri√©, on ne fait rien
  	if (!message.content.startsWith(config.prefix) || message.author.bot) return;

    else {
      const args = message.content.slice(config.prefix.length).trim().split(/ +/g);

      var enfant;
      var pretendante;
      // command est la commande √©crite par le joueur
       enfant = args[0].toLowerCase() - 1;
       idenfant = partie.enfants[enfant];
       pretendante = myArray[args[1].toLowerCase() - 1];

       // on change l'√©pouse
      idenfant[4] = pretendante;

       perso.epoux[8 - 1 ] = idenfant[0];
       partie.aviClerge += 0.2 ;
       partie.aviAristo += 0.2 ;
       var phrase = "  " + partie.enfants[enfant][1] + " et " + partie.enfants[enfant][4] + " sont maintenant mari et femme ! ";
       const embed = new Discord.RichEmbed()
       .setTitle('Marier un enfant')
       .setColor(808367)// Symbole m√©decine
       .setTimestamp() // Cr√©e de l'espace
       .addField(' F√©licitations !   : ', phrase)
       message.guild.channels.get(id).send({embed})


    }
  });

}

function tuerfemme(message,partie) {

  const id = myBot.messageChannel(message, "famille", partie);
  const embed = new Discord.RichEmbed()
  .setTitle('G√©rez votre famille')
  .setColor(808367)// Symbole m√©decine
  .setTimestamp() // Cr√©e de l'espace
  .addField( )
  .addField(':scream:  ', ' Souhaitez vous vraiment vous d√©barasser de votre femme ?')
  .addField(' ->   ', ' R√©pondez oui ou non dans le chat  !')
  message.guild.channels.get(id).send({embed})
  .then(async function(mess) {
    await mess.react('üòè');
  });
  client.on('message', (message) => {

    // Si le message provient d'un bot ou qu'il ne contient pas le prefix appropri√©, on ne fait rien
  	if (!message.content.startsWith(config.prefix) || message.author.bot) return;

    else {
      const args = message.content.slice(config.prefix.length).trim().split(/ +/g);

      var enfant;
      var pretendante;
      // command est la commande √©crite par le joueur
       reponse = args.shift().toLowerCase();

       if ( reponse =="non") {
         var phrase = " " + partie.epoux + " est toujours en vie  " ;
         const embed = new Discord.RichEmbed()
         .setTitle('Votre femme va bien')
         .setColor(808367)// Symbole m√©decine
         .setTimestamp() // Cr√©e de l'espace
         .addField('ouf  ! ', phrase)
          message.guild.channels.get(id).send({embed})
       }
      else {

       partie.aviClerge += 0.2 ;
       partie.aviAristo += 0.2 ;
       var phrase = " " + partie.epoux + " a fait une chute fatale dans un puit ! " ;
       const embed = new Discord.RichEmbed()
       .setTitle('Votre femme vient de myst√©rieusement disparaitre')
       .setColor(808367)// Symbole m√©decine
       .setTimestamp() // Cr√©e de l'espace
       .addField('oops ! ', phrase)
       message.guild.channels.get(id).send({embed})
       partie.epoux = null;
       console.log(partie.epoux);
       sfm.save(partie.player, partie);

    }
  }
  });

}


/** Fonction qui √©crit le texte explicatif sur le serveur Discord
* @param {string} message - Message discord
**/
function text(message) {

  // Supprime le message
  message.delete();

  const embed = new Discord.RichEmbed()
  .setColor(0x00AE86)
  .setTitle('Bienvenue dans Medieval.io.')

  .addField('Qu\'est ce que Medieval.io ?', 'La monarchie est soumise √† des lois qui ne sont pas toujours contournables, m√™me pas le monarque lui-m√™me. Les droits de successions peuvent s\'av√©rer compliqu√©s; il est alors primordial d\'assurer sa descendance afin de voir sa famille rester au pouvoir.')
  .addField('Vous √™tes Roi de France en l\'an de gr√¢ce 1300', 'Vous avez donc sous votre gouvernance un royaume et votre famille. Pour garantir la prosp√©rit√© de la nation et de votre nom, vous allez devoir faire preuve de reflexion afin de garantir votre r√®gne et celui de votre lign√©e. Pour cela vous allez devoir g√©rer vos relation et la legislation du pays.')
  .addField('Comment jouer ?', 'Chaque tour dure 5 ans, vous pouvez alors choisir ce que vous voulez faire pour cette p√©riode. Tous les choix se feront √† l\'aide des r√©actions que vous mettrez sous les messages ou par message texte.')
  .addField('Changer la l√©gislation', 'Vous pouvez changer les lois en votre faveure en faisant voter par le conseil pour que votre descendance reste au pouvoir apr√®s votre mort ou en abrogeant celles qui menacent votre lign√©e.')
  .addField('G√©rer votre famille', 'Vous pouvez g√©rer votre famille, √† commencer par vous-m√™me. Vous pouvez vous marier, marier vos enfants avec d‚Äôautres nobles ou encore les confier √† l‚Äô√©glise ou aux forces arm√©es de votre pays.')
  .addField('Votre objectif ?', 'Faire r√©gner votre d√©scendance le plus longtemps possible, si vous g√©rez votre r√®gne correctement vous allez alors avancer dans le temps et voir les g√©n√©rations de votre famille se succ√©der au trone.');

  message.channel.send({ embed });
}

/** Fonction qui permet d'effacer le message quand on passe au suivant
* @param {string} message - Message discord
**/
exports.clear = async function(message) {
    // message.delete();
    const fetched = await message.channel.fetchMessages();
    message.channel.bulkDelete(fetched);
};

exports.war = function war(){
  var res = 0;
  var adv = Math.floor(Math.random() * 10) + 1 ;
  var us = Math.floor(Math.random() * 10) + 1;
  if (us >= adv){
    res = 1;
  }
  return res;
};

exports.party = function party(){
  var res = 0;
  var lame = Math.floor(Math.random() * 3);
  if (lame != 0){
    res = 1;
  }
  return res;
};

function guerre(message, partie){
  var res = 'Vous avez perdue la guerre, l\'opinion g√©n√©rale √† votre √©gart a baiss√©';
  if (myBot.war() == 1){
    res = 'Vous avez gagn√© la guerre, vous gagnez en popularit√©'
    partie.avisArmee += 0.2;
    partie.avisClerg += 0.2;
    partie.avisAristo += 0.2;
  }
  else{
    partie.avisArmee -= 0.2;
    partie.avisClerg -= 0.2;
    partie.avisAristo -= 0.2;
  }

  const embed = new Discord.RichEmbed()
  .setColor(0x00AE86)
  .setTitle('Guerre üèπ')
  .addField('Vous avez d√©clar√© une guerre contre un pays voisin.', res);

  var id = myBot.messageChannel(message, "actions", partie);
  message.guild.channels.get(id).send({ embed })
};

function fete(message, partie){
  var res = 'La soir√©e fut un desastre, votre relation avec la noblesse s\'est envenim√©e';
  if (myBot.party() == 1){
    res = 'La soir√©e fut un succ√®s, votre relation avec la noblesse s\'est am√©lior√©e';
    partie.opiAristo += 0.1;
  }
  else{
    partie.opiAristo -= 0.1;
  }

  const embed = new Discord.RichEmbed()
  .setColor(0x00AE86)
  .setTitle('F√™te üéä')
  .addField('Vous avez organis√© une f√™te.', res);

  var id = myBot.messageChannel(message, "actions", partie);
  message.guild.channels.get(id).send({ embed })
};



client.login(config.token);
